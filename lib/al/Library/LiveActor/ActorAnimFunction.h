#pragma once

#include <math/seadMatrix.h>
#include <math/seadVector.h>

namespace al {
class LiveActor;
class SklAnimRetargettingInfo;

void startSklAnim(al::LiveActor*, const char*);
void startSklAnimInterpole(al::LiveActor*, const char*, const char*);
bool tryStartSklAnimIfExist(al::LiveActor*, const char*);
bool isSklAnimExist(const al::LiveActor*, const char*);
bool tryStartSklAnimIfNotPlaying(al::LiveActor*, const char*);
bool isSklAnimPlaying(const al::LiveActor*, const char*, s32);
void startSklAnimBlend(al::LiveActor*, const char*, const char*, const char*, const char*, const char*, const char*);
void startSklAnimBlendInterpole(al::LiveActor*, const char*, const char*, const char*, const char*, const char*, const char*, const char*);
void copySklAnim(al::LiveActor*, const al::LiveActor*);
bool isExistSklAnimRetargetting(const al::LiveActor*);
bool isSklAnimRetargettingValid(const al::LiveActor*);
void validateSklAnimRetargetting(const al::LiveActor*);
void invalidateSklAnimRetargetting(const al::LiveActor*);
void clearSklAnimInterpole(al::LiveActor*);
bool isSklAnimExist(const al::LiveActor*);
bool isSklAnimEnd(const al::LiveActor*, s32);
bool isSklAnimOneTime(const al::LiveActor*, const char*);
bool isSklAnimOneTime(const al::LiveActor*, s32);
bool isSklAnimPlaying(const al::LiveActor*, s32);
void getPlayingSklAnimName(const al::LiveActor*, s32);
void getSklAnimFrame(const al::LiveActor*, s32);
void getSklAnimFrameRate(const al::LiveActor*, s32);
void getSklAnimFrameMax(const al::LiveActor*, s32);
void getSklAnimFrameMax(const al::LiveActor*, const char*);
void setSklAnimFrame(al::LiveActor*, f32, s32);
void setSklAnimFrameRate(al::LiveActor*, f32, s32);
void setSklAnimFrameAndStop(al::LiveActor*, f32, s32);
void getSklAnimBlendNum(const al::LiveActor*);
void getSklAnimBlendWeight(const al::LiveActor*, s32);
void setSklAnimBlendWeight(al::LiveActor*, f32, s32);
void setSklAnimBlendWeightDouble(al::LiveActor*, f32);
void setSklAnimBlendWeightDouble(al::LiveActor*, f32, f32);
void setSklAnimBlendWeightTriple(al::LiveActor*, f32, f32, f32);
void setSklAnimBlendWeightQuad(al::LiveActor*, f32, f32, f32, f32);
void setSklAnimBlendWeightFivefold(al::LiveActor*, f32, f32, f32, f32, f32);
void setSklAnimBlendWeightSixfold(al::LiveActor*, f32, f32, f32, f32, f32, f32);
void setSklAnimBlendFrameAll(al::LiveActor*, f32, bool);
void setSklAnimBlendFrameRateAll(al::LiveActor*, f32, bool);
void startMtpAnim(al::LiveActor*, const char*);
void startMtpAnimAndSetFrameAndStop(al::LiveActor*, const char*, f32);
void setMtpAnimFrame(al::LiveActor*, f32);
void setMtpAnimFrameRate(al::LiveActor*, f32);
bool tryStartMtpAnimIfExist(al::LiveActor*, const char*);
bool isMtpAnimExist(const al::LiveActor*, const char*);
bool tryStartMtpAnimIfNotPlaying(al::LiveActor*, const char*);
bool isMtpAnimPlaying(const al::LiveActor*, const char*);
void clearMtpAnim(al::LiveActor*);
bool isMtpAnimExist(const al::LiveActor*);
bool isMtpAnimEnd(const al::LiveActor*);
bool isMtpAnimOneTime(const al::LiveActor*, const char*);
bool isMtpAnimOneTime(const al::LiveActor*);
void getPlayingMtpAnimName(const al::LiveActor*);
bool isMtpAnimPlaying(const al::LiveActor*);
void getMtpAnimFrame(const al::LiveActor*);
void getMtpAnimFrameRate(const al::LiveActor*);
void getMtpAnimFrameMax(const al::LiveActor*);
void getMtpAnimFrameMax(const al::LiveActor*, const char*);
void setMtpAnimFrameAndStop(al::LiveActor*, f32);
void setMtpAnimFrameAndStopEnd(al::LiveActor*);
void startMclAnim(al::LiveActor*, const char*);
bool tryStartMclAnimIfExist(al::LiveActor*, const char*);
bool isMclAnimExist(const al::LiveActor*, const char*);
bool tryStartMclAnimIfNotPlaying(al::LiveActor*, const char*);
bool isMclAnimPlaying(const al::LiveActor*, const char*);
void clearMclAnim(al::LiveActor*);
bool isMclAnimExist(const al::LiveActor*);
bool isMclAnimEnd(const al::LiveActor*);
bool isMclAnimOneTime(const al::LiveActor*, const char*);
bool isMclAnimOneTime(const al::LiveActor*);
void getPlayingMclAnimName(const al::LiveActor*);
bool isMclAnimPlaying(const al::LiveActor*);
void getMclAnimFrame(const al::LiveActor*);
void getMclAnimFrameRate(const al::LiveActor*);
void getMclAnimFrameMax(const al::LiveActor*);
void getMclAnimFrameMax(const al::LiveActor*, const char*);
void setMclAnimFrame(al::LiveActor*, f32);
void setMclAnimFrameRate(al::LiveActor*, f32);
void startMclAnimAndSetFrameAndStop(al::LiveActor*, const char*, f32);
void setMclAnimFrameAndStop(al::LiveActor*, f32);
void setMclAnimNormalFrameAndStop(al::LiveActor*, f32);
void setMclAnimFrameAndStopEnd(al::LiveActor*);
void startMtsAnim(al::LiveActor*, const char*);
void startMtsAnimAndSetFrameAndStop(al::LiveActor*, const char*, f32);
void setMtsAnimFrame(al::LiveActor*, f32);
void setMtsAnimFrameRate(al::LiveActor*, f32);
bool tryStartMtsAnimIfExist(al::LiveActor*, const char*);
bool isMtsAnimExist(const al::LiveActor*, const char*);
bool tryStartMtsAnimIfNotPlaying(al::LiveActor*, const char*);
bool isMtsAnimPlaying(const al::LiveActor*, const char*);
void clearMtsAnim(al::LiveActor*);
bool isMtsAnimExist(const al::LiveActor*);
bool isMtsAnimEnd(const al::LiveActor*);
bool isMtsAnimOneTime(const al::LiveActor*, const char*);
bool isMtsAnimOneTime(const al::LiveActor*);
void getPlayingMtsAnimName(const al::LiveActor*);
bool isMtsAnimPlaying(const al::LiveActor*);
void getMtsAnimFrame(const al::LiveActor*);
void getMtsAnimFrameRate(const al::LiveActor*);
void getMtsAnimFrameMax(const al::LiveActor*);
void getMtsAnimFrameMax(const al::LiveActor*, const char*);
void setMtsAnimFrameAndStop(al::LiveActor*, f32);
void setMtsAnimFrameAndStopEnd(al::LiveActor*);
void createMatAnimSlotForMcl(al::LiveActor*);
void createMatAnimSlotForMtp(al::LiveActor*);
void createMatAnimSlotForMts(al::LiveActor*);
void startMatAnim(al::LiveActor*, const char*);
void startMatAnimAndSetFrameAndStop(al::LiveActor*, const char*, f32);
void setMatAnimFrame(al::LiveActor*, f32);
void setMatAnimFrameRate(al::LiveActor*, f32);
bool tryStartMatAnimIfExist(al::LiveActor*, const char*);
bool isMatAnimExist(const al::LiveActor*, const char*);
bool tryStartMatAnimIfNotPlaying(al::LiveActor*, const char*);
bool isMatAnimPlaying(const al::LiveActor*, const char*);
void clearMatAnim(al::LiveActor*);
bool isMatAnimExist(const al::LiveActor*);
bool isMatAnimEnd(const al::LiveActor*);
bool isMatAnimOneTime(const al::LiveActor*, const char*);
bool isMatAnimOneTime(const al::LiveActor*);
void getPlayingMatAnimName(const al::LiveActor*);
bool isMatAnimPlaying(const al::LiveActor*);
void getMatAnimFrame(const al::LiveActor*);
void getMatAnimFrameRate(const al::LiveActor*);
void getMatAnimFrameMax(const al::LiveActor*);
void getMatAnimFrameMax(const al::LiveActor*, const char*);
void setMatAnimFrameAndStop(al::LiveActor*, f32);
void setMatAnimFrameAndStopEnd(al::LiveActor*);
void startVisAnim(al::LiveActor*, const char*);
bool tryStartVisAnimIfExist(al::LiveActor*, const char*);
bool isVisAnimExist(const al::LiveActor*, const char*);
bool tryStartVisAnimIfNotPlaying(al::LiveActor*, const char*);
bool isVisAnimPlaying(const al::LiveActor*, const char*);
void clearVisAnim(al::LiveActor*);
bool isVisAnimExist(const al::LiveActor*);
bool isVisAnimEnd(const al::LiveActor*);
bool isVisAnimOneTime(const al::LiveActor*, const char*);
bool isVisAnimOneTime(const al::LiveActor*);
void getPlayingVisAnimName(const al::LiveActor*);
bool isVisAnimPlaying(const al::LiveActor*);
void getVisAnimFrame(const al::LiveActor*);
void getVisAnimFrameRate(const al::LiveActor*);
void getVisAnimFrameMax(const al::LiveActor*);
void getVisAnimFrameMax(const al::LiveActor*, const char*);
void setVisAnimFrame(al::LiveActor*, f32);
void setVisAnimFrameRate(al::LiveActor*, f32);
void setVisAnimFrameAndStop(al::LiveActor*, f32);
void setVisAnimFrameAndStopEnd(al::LiveActor*);
void startVisAnimAndSetFrameAndStop(al::LiveActor*, const char*, f32);
void startVisAnimForAction(al::LiveActor*, const char*);
bool tryStartVisAnimIfExistForAction(al::LiveActor*, const char*);
bool tryStartVisAnimIfNotPlayingForAction(al::LiveActor*, const char*);
bool isVisAnimPlayingForAction(const al::LiveActor*, const char*);
void clearVisAnimForAction(al::LiveActor*);
bool isVisAnimEndForAction(const al::LiveActor*);
bool isVisAnimOneTimeForAction(const al::LiveActor*, const char*);
bool isVisAnimOneTimeForAction(const al::LiveActor*);
void getPlayingVisAnimNameForAction(const al::LiveActor*);
bool isVisAnimPlayingForAction(const al::LiveActor*);
void getVisAnimFrameForAction(const al::LiveActor*);
void getVisAnimFrameRateForAction(const al::LiveActor*);
void getVisAnimFrameMaxForAction(const al::LiveActor*);
void setVisAnimFrameForAction(al::LiveActor*, f32);
void setVisAnimFrameRateForAction(al::LiveActor*, f32);
void setVisAnimFrameAndStopForAction(al::LiveActor*, f32);
void setVisAnimFrameAndStopEndForAction(al::LiveActor*);
void startVisAnimAndSetFrameAndStopForAction(al::LiveActor*, const char*, f32);
void setAllAnimFrame(al::LiveActor*, f32);
void setAllAnimFrameRate(al::LiveActor*, f32);
void initAndBindSklAnimRetargetting(al::LiveActor*, const char*, const sead::Vector3f&);
void createSklAnimRetargetting(const al::LiveActor*, const char*, const sead::Vector3f&);
void bindSklAnimRetargetting(const al::LiveActor*, const al::SklAnimRetargettingInfo*);
void createSklAnimRetargetting(const al::LiveActor*, const al::LiveActor*, const sead::Vector3f&);
void unbindSklAnimRetargetting(const al::LiveActor*);
void initPartialSklAnim(al::LiveActor*, s32, s32, s32);
void getPartialSklAnimSlotNum(al::LiveActor*);
void addPartialSklAnimPartsList(al::LiveActor*, const char*, const char*, s32);
void addPartialSklAnimPartsListRecursive(al::LiveActor*, const char*, s32);
void calcJoitsAmountFromJoint(al::LiveActor*, const char*);
void startPartialSklAnim(al::LiveActor*, const char*, s32, s32, const al::SklAnimRetargettingInfo*);
void startPartialSklAnimWithInterpolate(al::LiveActor*, const char*, s32, s32, s32, const al::SklAnimRetargettingInfo*);
void clearPartialSklAnim(al::LiveActor*, s32);
void clearPartialSklAnimWithInterpolate(al::LiveActor*, s32, s32);
bool isPartialSklAnimEnd(const al::LiveActor*, s32);
bool isPartialSklAnimOneTime(const al::LiveActor*, s32);
bool isPartialSklAnimAttached(const al::LiveActor*, s32);
bool isPartialSklAnimPlaying(const al::LiveActor*, const char*, s32);
void getPlayingPartialSklAnimName(const al::LiveActor*, s32);
void getPartialSklAnimFrame(const al::LiveActor*, s32);
void setPartialSklAnimFrame(al::LiveActor*, s32, f32);
void getPartialSklAnimFrameRate(const al::LiveActor*, s32);
void setPartialSklAnimFrameRate(al::LiveActor*, s32, f32);
void setBaseMtxAndCalcAnim(al::LiveActor*, const sead::Matrix34f&, const sead::Vector3f&);
}  // namespace al

namespace alAnimFunction {
bool isAllAnimEnd(const al::LiveActor*, s32);
void getAllAnimFrame(const al::LiveActor*, s32);
void getAllAnimFrameMax(const al::LiveActor*, const char*, s32);
void getAllAnimFrameRate(const al::LiveActor*, s32);
void getAllAnimName(const al::LiveActor*);
}  // namespace alAnimFunction