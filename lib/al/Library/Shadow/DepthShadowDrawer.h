#pragma once

#include <al/Library/LiveActor/LiveActor.h>
#include <al/Library/Shadow/DepthShadowMapCtrl.h>
#include <al/Library/Shadow/ShadowMaskCtrl.h>
namespace al {
    class ShadowMaskDrawCategory;

    bool isExistShadow(al::LiveActor *);
    bool isExistShadowMaskCtrl(al::LiveActor *);
    bool isExistShadowMask(al::LiveActor *,char const*);
    bool isExistDepthShadow(al::LiveActor *);
    bool isExistDepthShadowMapCtrl(al::LiveActor *);
    bool isExistAnyShadowCtrl(al::LiveActor *);
    bool isHideShadowMask(al::LiveActor const*);
    void hideShadow(al::LiveActor *);
    void showShadow(al::LiveActor *);
    void showShadowMask(al::LiveActor *);
    void showShadowMask(al::LiveActor *,al::ShadowMaskBase *);
    void showShadowMask(al::LiveActor *,char const*);
    void showShadowMask(al::LiveActor *,al::ShadowMaskDrawCategory);
    void hideShadowMask(al::LiveActor *);
    void hideShadowMask(al::LiveActor *,al::ShadowMaskBase *);
    void hideShadowMask(al::LiveActor *,char const*);
    void hideShadowMask(al::LiveActor *,al::ShadowMaskDrawCategory);
    bool isHideShadowMask(al::LiveActor *,char const*);
    void showDepthShadowMap(al::LiveActor *,s32);
    void showDepthShadowMap(al::LiveActor const*,al::DepthShadowMapInfo *);
    void showDepthShadowMap(al::LiveActor *,char const*);
    void hideDepthShadowMap(al::LiveActor *,s32);
    void hideDepthShadowMap(al::LiveActor const*,al::DepthShadowMapInfo *);
    void hideDepthShadowMap(al::LiveActor *,char const*);
    bool isHideDepthShadowMap(al::LiveActor *,char const*);
    bool isHideDepthShadowMap(al::LiveActor *,s32);
    void getDepthShadowMapNum(al::LiveActor *);
    void validateShadowMask(al::LiveActor *);
    void validateShadowMask(al::LiveActor *,al::ShadowMaskBase *);
    void validateShadowMask(al::LiveActor *,char const*);
    void invalidateShadowMask(al::LiveActor *);
    void invalidateShadowMask(al::LiveActor *,al::ShadowMaskBase *);
    void invalidateShadowMask(al::LiveActor *,char const*);
    void validateDepthShadowMap(al::LiveActor *);
    void validateDepthShadowMap(al::LiveActor *,al::DepthShadowMapInfo *);
    void validateDepthShadowMap(al::LiveActor *,char const*);
    void invalidateDepthShadowMap(al::LiveActor *);
    void invalidateDepthShadowMap(al::LiveActor *,al::DepthShadowMapInfo *);
    void invalidateDepthShadowMap(al::LiveActor *,char const*);
    void invalidateShadowMask(al::LiveActor *,al::ShadowMaskDrawCategory);
    void invalidateShadowMaskIntensityAll(al::LiveActor *);
    void setShadowMaskFixed(al::LiveActor *,bool);
    void setShadowMaskDropDir(al::LiveActor *,sead::Vector3f const&);
    void setShadowMaskDropDir(al::LiveActor *,sead::Vector3f const&,char const*);
    void setShadowMaskDropDirActorDown(al::LiveActor *);
    void setShadowMaskSize(al::LiveActor *,char const*,sead::Vector3f const&);
    void setShadowMaskSize(al::LiveActor *,char const*,f32,f32,f32);
    void setShadowTextureOffset(al::LiveActor *,char const*,f32,f32);
    void onShadowTextureScroll(al::LiveActor *,char const*);
    void offShadowTextureScroll(al::LiveActor *,char const*);
    void calcShadowMaskSize(sead::Vector3f *,al::LiveActor *,char const*);
    void getShadowMaskDropLength(al::LiveActor const*,char const*);
    void setShadowMaskDropLength(al::LiveActor *,f32);
    void setShadowMaskDropLength(al::LiveActor *,f32,char const*);
    void setShadowMaskDropLengthScaleWithDrawCategory(al::LiveActor *,f32,al::ShadowMaskDrawCategory);
    void setShadowMaskDropLengthWithDrawCategory(al::LiveActor *,f32,al::ShadowMaskDrawCategory);
    void setShadowMaskDropLengthEvenWithTarget(al::ShadowMaskBase *,char const*,sead::Vector3f const&);
    void setShadowMaskDropLengthEvenWithTarget(al::ShadowMaskBase *,al::ShadowMaskBase const*,sead::Vector3f const&);
    void setShadowMaskDropLengthEvenWithDrawCategory(al::LiveActor *,al::ShadowMaskDrawCategory,al::LiveActor const*,char const*);
    void setShadowMaskDropLengthEvenPlaneNormal(al::LiveActor const*,sead::Vector3f const&);
    void getDepthShadowMapWidth(al::LiveActor const*,char const*);
    void getDepthShadowMapHeight(al::LiveActor const*,char const*);
    void setDepthShadowMapSize(al::LiveActor const*,s32,s32,char const*);
    void getDepthShadowMapLength(al::LiveActor const*,char const*);
    void setDepthShadowMapLength(al::LiveActor const*,f32,char const*);
    void setDepthShadowMapLengthFromActorTransFlag(al::LiveActor const*,bool,char const*);
    void setDepthShadowMapBoundingBox(al::LiveActor const*,sead::Vector3f const&,sead::Vector3f const&,char const*);
    void setDepthShadowMapMaskTypeNone(al::LiveActor const*,char const*);
    void setDepthShadowMapMaskTypeSelf(al::LiveActor const*,char const*);
    void setEnableDepthShadowMapBottomGradation(al::LiveActor const*,char const*,bool);
    bool isEnableDepthShadowMapBottomGradation(al::LiveActor const*,char const*);
    void setDepthShadowMapBottomGradationLength(al::LiveActor const*,char const*,f32);
    void getDepthShadowMapBottomGradationLength(al::LiveActor const*,char const*);
    bool isAppendSubActorDepthShadowMap(al::LiveActor const*);
    void getShadowMaskDropLengthMax(al::LiveActor const*);
    void setShadowMaskColor(al::LiveActor const*,char const*,sead::Color4f const&);
    void getShadowMaskColor(al::LiveActor const*,char const*);
    void setShadowMaskIntensity(al::LiveActor const*,char const*,f32);
    void getShadowMaskIntensity(al::LiveActor const*,char const*);
    void getShadowMaskTextureFixedScale(al::LiveActor const*,char const*);
    void setShadowMaskTextureFixedScale(al::LiveActor const*,char const*,f32);
    void getShadowMaskOffset(al::LiveActor const*,char const*);
    void setShadowMaskOffset(al::LiveActor const*,sead::Vector3f const&,char const*);
    bool isExistOcclusionLightPosPtr(al::LiveActor const*,char const*);
    void setOcclusionLightPosPtr(al::LiveActor const*,char const*,sead::Vector3f const*);
    void setOcclusionAddOffset(al::LiveActor const*,char const*,sead::Vector3f const&);
    void enableOcclusion(al::LiveActor const*,char const*);
    void disableOcclusion(al::LiveActor const*,char const*);
    bool isEnableOcclusion(al::LiveActor const*,char const*);
    void calcSphereDoBoundingInfo(sead::Vector3f *,sead::Vector3f *,f32 *,f32 *,al::LiveActor const*,char const*,f32);
    void calcOcclusionSpherePos(sead::Vector3f *,al::LiveActor const*,char const*);
    void changeOcclusionGroup(al::LiveActor const*,char const*,char const*);
    void getOcclusionSphere(al::LiveActor const*,char const*);
    void setOcclusionIgnoreHostHide(al::LiveActor const*,bool);
    void findIsInShade(al::LiveActor const*,sead::Vector3f const&);
    void requestDepthShadowMapLightDir(al::LiveActor const*,sead::Vector3f const&,char const*);
    void resetRequestDepthShadowMapLightDir(al::LiveActor const*,char const*);
    bool isRequestDepthShadowMapLightDir(al::LiveActor const*,char const*);
    void onDepthShadowModel(al::LiveActor *);
    void offDepthShadowModel(al::LiveActor *);
    void updateDepthShadowMapCtrlShapeVisible(al::LiveActor *);
}